# -*- coding: utf-8 -*-
"""Cópia de LP2023 - Avaliação 02 - Exercício 02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-7lFzK9EkFVM_3_uyiLtxtlYBA07YEvR

Curso de Tecnologia em Análise e Desenvolvimento de Sistemas da Faculdade de Tecnologia de São José do Rio Preto
# Avaliação de Linguagem de Programação
## Prof. Dr. Henrique Dezani

---
### SUBMISSÃO

Para submeter a sua solução, siga as etapas:
1. Faça o download do código python clicando em File -> Download -> Download.py
2. Acesse o _link_
3. Faça o login usando seu número de matrícula
4. Faça o _upload_ do Exercício (arquivo que fez o _download_ do Colab na etapa 2). 

Não se esqueça de escolher o exerício correto durante a submissão.

---
### ENUNCIADO DO EXERCÍCIO 2

Uma sequência de Collatz em matemática pode ser definida da seguinte forma. 

Começando com qualquer número `n` inteiro positivo:

- Se `n` for par, o próximo número na sequência é `n / 2`

- Se `n` for ímpar, o próximo número na sequência é `3n + 1`

É conjecturado que toda sequência desse tipo eventualmente atinge o número 1.

Crie um programa que, dada como entrada um número inteiro positivo `n`, este imprima a lista gerada pela sequência de Collatz.

**Formato da entrada**

A entrada consiste num número inteiro positivo.

**Formato da saída**

Uma lista contendo a sequência de Collatz.

**Exemplo**

Entradas

```
12
```

Saída

```
[12, 6, 3, 10, 5, 16, 8, 4, 2, 1]
```
"""

n = int(input())

# Desenvolva seu programa a partir daqui.


lista = list()
lista.append(int(n))
resultado = 0
while True:

  if n %2 == 0:
    resultado = n / 2
    n = resultado
  else:
    resultado = 3 * n + 1
    n = resultado

  lista.append(int(resultado))
  if resultado == 1:
    break
print(lista)

